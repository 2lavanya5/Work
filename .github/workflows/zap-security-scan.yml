name: OWASP ZAP Security Scan

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Show Directory Structure
        run: ls -R  # Debugging: Show repository structure

      - name: Verify Template Exists
        run: |
          # Check for templates directory (case-insensitive)
          if [ ! -d templates ] && [ ! -d Templates ]; then
            echo "::error::Missing templates directory!"
            echo "Current directory contents:"
            ls -al
            exit 1
          fi

          # Check for home.html in either templates/ or Templates/
          if [ ! -f templates/home.html ] && [ ! -f Templates/home.html ]; then
            echo "::error::Missing template file: home.html"
            echo "Templates directory contents:"
            ls -al templates/ Templates/ 2>/dev/null || true
            exit 1
          fi

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install gunicorn

      - name: Start Flask App
        run: |
          export PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE  # Ensure Python path is set
          nohup gunicorn -w 4 -b 0.0.0.0:5000 app:app &  # Start Flask app in background
          sleep 45  # Wait for app to initialize (increased from 35s)
          curl --retry 12 --retry-delay 5 --retry-connrefused http://127.0.0.1:5000 || (echo "Flask app failed to start!" && exit 1)

      - name: Run OWASP ZAP Scan
        uses: zaproxy/action-full-scan@v0.11.0
        with:
          target: 'http://127.0.0.1:5000'  # Target the running Flask app
          cmd_options: '-a -J -j -d -x report.html --timeout 600'  # ZAP scan options
          docker_image: 'owasp/zap2docker-stable'  # Use stable ZAP Docker image

      - name: Verify Report File Exists
        run: |
          if [ ! -f report.html ]; then
            echo "Error: report.html does not exist!"
            exit 1
          fi

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report-${{ github.run_id }}  # Unique name for each run
          path: report.html  # Upload the generated report

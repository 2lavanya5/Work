name: OWASP ZAP Security Scan

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 * * * *'  # Hourly scans

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git Safety
        run: |
          git config --global --add safe.directory /github/workspace
          git config --local --unset-all core.sshCommand || :
          git submodule foreach --recursive 'git config --local --unset-all core.sshCommand || :'

      - name: Verify Template Structure
        run: |
          echo "üîç Repository structure:"
          tree -I '*.pyc|__pycache__|*.db' -L 3
          
          echo -e "\nüìÑ Checking templates:"
          required_templates=(
            "home.html"
            "login.html"
            "register.html"
            "profile.html"
            "forgot_password.html"
            "settings.html"
          )
          
          for template in "${required_templates[@]}"; do
            if [ ! -f "templates/$template" ]; then
              echo "::error file=templates/$template::Missing required template: $template"
              exit 1
            fi
            echo "‚úÖ Found template: $template"
          done

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Clean Python Cache
        run: |
          find . -type d -name "__pycache__" -exec rm -rf {} +
          find . -type f -name "*.pyc" -delete

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install gunicorn

      - name: Install Java 17
        run: sudo apt-get install -y openjdk-17-jdk

      - name: Start Flask Application
        run: |
          echo "üöÄ Starting Flask app..."
          nohup gunicorn --bind 0.0.0.0:5000 \
            --access-logfile gunicorn-access.log \
            --error-logfile gunicorn-error.log \
            app:app > flask.log 2>&1 &
          
          echo "‚è≥ Waiting for app to start..."
          timeout 120 bash -c '
            while ! nc -z 127.0.0.1 5000; do
              sleep 2
              echo "‚è±Ô∏è Waiting for port 5000..."
            done'
          
          echo "üîó Application status:"
          curl -v http://127.0.0.1:5000
          echo -e "\nüìã Startup logs:"
          tail -n 50 flask.log

      - name: Download OWASP ZAP
        run: |
          wget -q https://github.com/zaproxy/zaproxy/releases/download/v2.14.0/ZAP_2.14.0_Linux.tar.gz
          tar -xzf ZAP_2.14.0_Linux.tar.gz
          mv ZAP_2.14.0 zap
          chmod +x zap/zap.sh

      - name: Run Security Scan
        run: |
          echo "üîé Starting ZAP scan..."
          zap/zap.sh -cmd \
            -quickurl http://127.0.0.1:5000 \
            -quickprogress \
            -quickout zap-report.html
          
          echo "üîÑ Converting report to PDF..."
          zap/zap.sh -cmd -export_report zap-report.html zap-report.pdf

      - name: Upload Security Reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            zap-report.html
            zap-report.pdf
          retention-days: 7

      - name: Upload Debug Logs
        uses: actions/upload-artifact@v4
        with:
          name: debug-logs
          path: |
            flask.log
            gunicorn-access.log
            gunicorn-error.log
          retention-days: 3

      - name: Shutdown Application
        run: |
          echo "üõë Stopping Flask app..."
          pkill -f gunicorn

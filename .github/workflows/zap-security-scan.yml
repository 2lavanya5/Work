name: OWASP ZAP Security Scan

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Clean Temporary Files
        run: |
          find . -type f \( -name "*.pyc" -o -name "*.db" -o -name "*.d.html" \) -delete
          rm -rf Templates/__pycache__

      - name: Verify Template Structure
        run: |
          echo "📂 Actual Repository Structure:"
          tree -L 3
          
          echo -e "\n🔍 Validating Templates:"
          required_templates=(
            "home.html"
            "login.html"
            "register.html"
            "profile.html"
            "settings.html"
            "forgot_password.html"
          )
          
          # Verify directory exists
          if [ ! -d "Templates" ]; then
            echo "::error::Missing Templates directory"
            exit 1
          fi
          
          # Check template files
          for template in "${required_templates[@]}"; do
            if [ ! -f "Templates/${template}" ]; then
              echo "::error file=Templates/${template}::Missing template: ${template}"
              exit 1
            fi
            echo "✅ Valid: Templates/${template}"
          done

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install gunicorn

      - name: Start Flask App
        run: |
          nohup gunicorn --bind 0.0.0.0:5000 app:app > flask.log 2>&1 &
          timeout 60 bash -c 'while ! curl -s http://127.0.0.1:5000 >/dev/null; do sleep 2; done'

      - name: Run Security Scan
        run: |
          wget https://github.com/zaproxy/zaproxy/releases/download/v2.14.0/ZAP_2.14.0_Linux.tar.gz
          tar -xvf ZAP_2.14.0_Linux.tar.gz
          ./ZAP_2.14.0/zap.sh -cmd -quickurl http://127.0.0.1:5000 -quickout report.html

      - name: Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: |
            report.html
            flask.log
